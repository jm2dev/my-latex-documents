#+TITLE:     PaaS :: OpenShift
#+AUTHOR:    Jose Miguel Martinez Carrasco, HÃ©ctor Rivas
#+EMAIL:     jose.miguel@springer.com
#+INSTITUTE: Springer - London
#+DATE:      2013-08-11 Sun
#+DESCRIPTION:
#+KEYWORDS: openshift, PaaS, Agile
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:
#+startup: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [bigger]
#+BEAMER_FRAME_LEVEL: 2
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)
#+latex_header: \mode<beamer>{\usetheme{Pittsburgh}\setbeamercolor{postit}{fg=black,bg=white!80!black}\usecolortheme{fly}}

* Context

** SaaS

is a software delivery model in which software and associated data are centrally hosted on the cloud. 

Oriented to the end user, he won't have to care about the software and the data, and will have universal access.

*** Examples

Gmail, Github, prezi, SpringerLink

** IaaS

offers virtual resources for machines, disk, network, load balancers, ussually on-demand from pools in data centers.

Oriented to ops, that won't care about physical maintenance, can provision on-demand, etc.

*** Examples

Amazon, rackspace, OpenStack

** PaaS

provides a computing platform and a solution stack as a service (java, php, etc), taking care of autodeployment, scaling, etc.

Oriented to the developers, they won't care how the underlying servers and systems (meanwhile they follow some rules).

*** Examples

Heroku, Google App Engine, Openshift

** What can PaaS offer?

- deploy applications as easy as pushing code.

- developers will focus on the application instead of on the underlying platform.

- create new environments as needed, without any extra overhead.

- scale on demand and get the best from our resources.

- have isolated and homogenous platform

** What are the benefits? 

*** People working on the right tasks

- developers on delivering end user features
- systems engineers on delivering a platform

*** Flexibility
- easy environments creation
- fast services deployment
- maintenance overhead reduction
- tasks simplification

** I buy it, I want it now!!!

OK, but this does not come for free.

- we need a PaaS solution (hosted or private)
- we need to learn how to use it
- we need to adapt our software
- we need to change our delivery process

* How do it work?

* Solution: OpenShift
** What is it?

OpenShift is a cloud computing platform as a service product from Red Hat. A version for private cloud is named OpenShift Enterprise.

The software that runs the service is open-sourced under the name
OpenShift Origin, and is available on GitHub. 

Developers can use Git to deploy web applications in different languages on the platform.

Uniquely, OpenShift also supports binary programs that are web
applications, so long as they can run on Red Hat Enterprise Linux. 
This allows the use of arbitrary languages and frameworks. OpenShift takes care of maintaining the services underlying the application and scaling the application as needed.

** Simplify the lifecycle

Getting a Java app with a MySQL backend deployed onto OpenShift is as
easy as executing two commands:

#+begin_src bash
rhc app create MyApp jbossews
rhc cartridge add mysql-5.1 -a MyApp
#+end_src

These two commands create your "server" and install and configure Tomcat (via JBoss EWS), MySQL, a git repository on the server, and a simple web application. You can now visit your application on the web at:

http://MyApp-MyDomain.rhcloud.com/

** Simplify the lifecycle (II)

Now we do not need to worry about servers, DNS entries, load
balancing, high availability, etc.

Everything is provided by the platform infrastructure, that is also
the reason Openshift is PaaS (Platform as a service).

It supports the most popular technologies like Java, ruby, nodejs,
etc; and allow us to extend it via cartridges to support additional applications.

** What does it provide?
 
- Rapid deployment
- Early feedback
- Focus on the app not the infrastructure
- Autoscaling
- DIY: cartridges


* References
** Links

- [[http://www.slideshare.net/fallenpegasus/openshift-openstack-fedora-awesome][Openshift and openstack]].
- [[ttp://www.slideshare.net/jdewinne/cloud-development-using-play-scala-and-openshift][Play Scala and Openshift]].
